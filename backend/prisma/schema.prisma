// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String?
  password      String
  profilePicKey String?
  bannerPicKey  String?
  about          String?
  posts         Post[]
  follow        Follow[] @relation(name: "FollowedUser")
  followers     Follow[] @relation(name: "FollowerUser")
  savedPosts    Post[]   @relation(name: "SavedPost")
  tagsLiked     String[]
}

model Follow {
  id          String @id @default(uuid())
  followed    User   @relation(name: "FollowedUser", fields: [followersId], references: [id], onDelete: Cascade)
  follower    User   @relation(name: "FollowerUser", fields: [followedId], references: [id], onDelete: Cascade)
  followedId  String
  followersId String
}

model Post {
  id        String   @id @default(uuid())
  tag       String[]
  title     String
  content   String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  User      User?    @relation(name: "SavedPost", fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  rating    Int      @default(0)
}
